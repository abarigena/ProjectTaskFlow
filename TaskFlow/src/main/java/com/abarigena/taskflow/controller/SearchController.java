package com.abarigena.taskflow.controller;

import com.abarigena.taskflow.serviceNoSQL.OpenSearchService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.*;
import reactor.core.publisher.Flux;

import java.util.Map;

/**
 * –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤ OpenSearch
 * –†–µ–∞–ª–∏–∑—É–µ—Ç API –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–¥–∞—á, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ Task-11
 */
@RestController
@RequestMapping("/search")
@RequiredArgsConstructor
@Slf4j
public class SearchController {

    private final OpenSearchService openSearchService;

    /**
     * –ü–æ–∏—Å–∫ –∑–∞–¥–∞—á –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
     * 
     * @param query —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ (–≤ title –∏ description)
     * @param status —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
     * @param priority –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
     * @param from –Ω–æ–º–µ—Ä –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (default: 0)
     * @param size –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (default: 10)
     * @return –ø–æ—Ç–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
     * 
     * –ü—Ä–∏–º–µ—Ä: GET /search/tasks?query=example&status=TODO&priority=HIGH
     */
    @GetMapping("/tasks")
    public Flux<Map<String, Object>> searchTasks(
            @RequestParam(required = false) String query,
            @RequestParam(required = false) String status,
            @RequestParam(required = false) String priority,
            @RequestParam(defaultValue = "0") Integer from,
            @RequestParam(defaultValue = "10") Integer size
    ) {
        log.info("üîç –ü–æ–∏—Å–∫ –∑–∞–¥–∞—á: query={}, status={}, priority={}, from={}, size={}", 
            query, status, priority, from, size);
        
        return openSearchService.searchTasks(query, status, priority, from, size);
    }

    /**
     * –ü–æ–∏—Å–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
     * 
     * @param query —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
     * @param taskId ID –∑–∞–¥–∞—á–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
     * @param from –Ω–æ–º–µ—Ä –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (default: 0)
     * @param size –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (default: 10)
     * @return –ø–æ—Ç–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
     * 
     * –ü—Ä–∏–º–µ—Ä: GET /search/comments?query=example&taskId=123
     */
    @GetMapping("/comments")
    public Flux<Map<String, Object>> searchComments(
            @RequestParam(required = false) String query,
            @RequestParam(required = false) Long taskId,
            @RequestParam(defaultValue = "0") Integer from,
            @RequestParam(defaultValue = "10") Integer size
    ) {
        log.info("üîç –ü–æ–∏—Å–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: query={}, taskId={}, from={}, size={}", 
            query, taskId, from, size);
        
        return openSearchService.searchComments(query, taskId, from, size);
    }

    /**
     * –ü–æ–∏—Å–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
     * 
     * @param query —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ (–≤ name –∏ description)
     * @param status —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
     * @param from –Ω–æ–º–µ—Ä –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (default: 0)
     * @param size –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (default: 10)
     * @return –ø–æ—Ç–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
     * 
     * –ü—Ä–∏–º–µ—Ä: GET /search/projects?query=example
     */
    @GetMapping("/projects")
    public Flux<Map<String, Object>> searchProjects(
            @RequestParam(required = false) String query,
            @RequestParam(required = false) String status,
            @RequestParam(defaultValue = "0") Integer from,
            @RequestParam(defaultValue = "10") Integer size
    ) {
        log.info("üîç –ü–æ–∏—Å–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤: query={}, status={}, from={}, size={}", 
            query, status, from, size);
        
        return openSearchService.searchProjects(query, status, from, size);
    }

    /**
     * –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
     * 
     * @param query —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ (–≤ first_name, last_name, email, fullName)
     * @param active —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
     * @param from –Ω–æ–º–µ—Ä –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (default: 0)
     * @param size –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (default: 10)
     * @return –ø–æ—Ç–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
     * 
     * –ü—Ä–∏–º–µ—Ä: GET /search/users?query=–ò–≤–∞–Ω&active=true
     */
    @GetMapping("/users")
    public Flux<Map<String, Object>> searchUsers(
            @RequestParam(required = false) String query,
            @RequestParam(required = false) Boolean active,
            @RequestParam(defaultValue = "0") Integer from,
            @RequestParam(defaultValue = "10") Integer size
    ) {
        log.info("üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: query={}, active={}, from={}, size={}", 
            query, active, from, size);
        
        return openSearchService.searchUsers(query, active, from, size);
    }
} 